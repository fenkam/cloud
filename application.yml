eureka:
    instance:
        leaseRenewalIntervalInSeconds: 10
    client:
        serviceUrl:
            defaultZone: http://localhost:7001/v2/
kafka:
    producerConfig:
        metadata.broker.list: localhost:9092
        serializer.class: kafka.serializer.StringEncoder
    consumerConfig:
        zookeeper.connect: localhost:2181
        zookeeper.session.timeout.ms: 1000
        zookeeper.sync.time.ms: 1000
        auto.commit.interval.ms: 1000

zookeeper:
   connectionString: localhost:2181
   baseSleepTimeMs: 500
   maxRetries: 10
   
hls-microservice:
    hlsKey: key2
    rottenUrl: http://api.rottentomatoes.com/api/public/v1.0/movies/{rottenTomatoesProductId}/similar.json?apikey={apiKey}

hystrix:
    dashboard:
        serviceName: quickplay-turbine
        clusterName: quickplayGroup


         
bookmark-microservice:
         databaseServiceName: http://database-microservice

creditcard-microservice:
    braintree:
         environment: sandbox
         merchantId: ddd44gynpmzcw45f
         publicKey: b4vn98989c7xs7dn
         privateKey: b197ffecb8077b6932fc3c69ef11f91a
    databaseServiceName: http://database-microservice
         

customer-microservice:
         databaseServiceName: http://database-microservice
         resetPasswordTopic: resetPasswordTopic
         updateCustomerTopic: updateCustomerTopic
         createCustomerTopic: createCustomerTopic
         deleteCustomerTopic: deleteCustomerTopic
         changePasswordTopic: changePasswordTopic

device-microservice:
         databaseServiceName: http://database-microservice

entitlement-microservice:
         databaseServiceName: http://database-microservice
         solrReadUrl: http://solr-slave-microservice/solr/select

genre-microservice:
         databaseServiceName: http://database-microservice

offer-microservice:
         databaseServiceName: http://database-microservice
         
notification-microservice:
        defaultCreateCustomerNotificationTemplate: Hi {firstName},\n Your account has been created. Thanks for choosing {serviceName}.\n Your {serviceName} Team.
        defaultUpdateCustomerNotificationTemplate: Hi {firstName},\n Your account has been updated. Thanks for choosing {serviceName}.\n Your {serviceName} Team.
        defaultDeleteCustomerNotificationTemplate: Hi {firstName},\n Your account has been deleted. We are sorry to see you leave and hope to see you soon again.\n Your {serviceName} Team.
        defaultChangePasswordNotificationTemplate: Hi {firstName},\n Your password has been changed. Thanks for choosing {serviceName}.\n Your {serviceName} Team.
        defaultResetPasswordNotificationTemplate: Hi {firstName},\n Your password has been reset to {newPassword}. Thanks for choosing {serviceName}.\n Your {serviceName} Team.
        defaultPurchaseNotificationTemplate: 
        defaultCreateTenantNotificationTemplate: Hi ${firstName},\n Your tenant account has been created. Thanks for choosing {serviceName}.\n Your {serviceName} Team.
        defaultUpdateTenantNotificationTemplate: Hi {firstName},\n Your tenant account has been updated. Thanks for choosing {serviceName}.\n Your {serviceName} Team.
        defaultDeleteTenantNotificationTemplate: Hi {firstName},\n Your tenant account has been deleted. We are sorry to see you leave and hope to see you soon again.\n Your {serviceName} Team.
        defaultAddAdministratorNotificationTemplate: Hi {firstName},\n User with email {adminEmail} has been added as administrator of your tenant, {tenantName}. Thanks for choosing {serviceName}.\n Your Libertas Team.
        defaultRemoveAdministratorNotificationTemplate: Hi {firstName},\n User with email {adminEmail} has been removed as administrator of your tenant, {tenantName}. Thanks for choosing {serviceName}.\n Your Libertas Team.
        defaultCreateCustomerNotificationSubject: Account Created
        defaultUpdateCustomerNotificationSubject: Account Updated
        defaultDeleteCustomerNotificationSubject: Account Deleted
        defaultChangePasswordNotificationSubject: Password Changed
        defaultResetPasswordNotificationSubject: Password Reset
        defaultPurchaseNotificationSubject: Invoice
        defaultCreateTenantNotificationSubject: Tenant Created
        defaultUpdateTenantNotificationSubject: Tenant Configuration Updated
        defaultDeleteTenantNotificationSubject: Tenant Deleted
        defaultAddAdministratorNotificationSubject: Tenant Administrator Added
        defaultRemoveAdministratorNotificationSubject: Tenant Administrator Removed
        databaseServiceName: http://database-microservice
        smptProperties:
                mail.smtp.auth: true
                mail.smtp.starttls.enable: true
                mail.smtp.host: smtp.gmail.com
                mail.smtp.port: 587
                mail.from: pascal@fenkam.name
                mail.username: pascal@fenkam.name
                mail.password: solo77ville/.
         
playback-microservice:
         databaseServiceName: http://database-microservice
         playbackResponseTimoutMillis: 200
         playbackResponseMinCount: 1
         playbackLocationRequestTopic: playback-location-request2
         playbackLocationResponseTopic: playback-location-response2
         SolrReadUrl: http://solr-slave-microservice/solr/select
         playbackLocationFrequencyMillis: 10000
         entitlementServiceUrlTemplate: http://entitlement-microservice/v1/entitlement/check/product/{productId}?customerId={customerId}&apiKey={tenantId}
         deviceSpecMapping:
             mobile.*: .*

product-microservice:
         solrReadUrl: http://solr-slave-microservice/solr/select
         solrWriteUrl: http://solr-master-microservice/solr/update
         defaultSearcheableFields: title,id,directors,producers,genres,shorttitle,actors,producttype,releaseyear
         defaultQueryTemplate: title:{}  OR directors:{} OR shorttitle:{} OR producers:{} 
         databaseServiceName: http://database-microservice
         tenantServiceName: http://tenant-microservice
         offerServiceName: http://offer-microservice
         createProductLockPath: /catalog/product/lock/create
         createProductLockTimeoutMillis: 10000
         progressWatchedQueryTemplate: http://playback-microservice/v1/playback/location/product/{productId}?customerId={customerId}&apiKey={tenantId}
         canWatchNowQueryTemplate: http://entitlement-microservice/v1/entitlement/check/product/{productId}?customerId={customerId}&apiKey={tenantId}

   

promotion-microservice:
         databaseServiceName: http://database-microservice
         
         
         
purchase-microservice:
         solrReadUrl: http://solr-slave-microservice/solr/select
         databaseServiceName: http://database-microservice
         tenantServiceName: http://tenant-microservice
         offerServiceName: http://offer-microservice
         entitlementServiceName: http://entitlement-microservice
         purchaseTopic: purchaseTopic
         braintree: 
                environment: sandbox
                merchantId: ddd44gynpmzcw45f
                publicKey: b4vn98989c7xs7dn
                privateKey: b197ffecb8077b6932fc3c69ef11f91a
         
rating-microservice:
         databaseServiceName: http://database-microservice
         avgUserRatingComputationFrequencyMilis: 600000
         updateProductPath: /v1/product
         productServiceName: product-microservice
         avgUserRatingKafkaGroupId: rating.avg-user-rating.id
         ratingCreationTopic: createRating
         
review-microservice:
         databaseServiceName: http://database-microservice

recommendation-microservice:
        solrReadUrl: http://solr-slave-microservice/solr/select
        databaseServiceName: http://database-microservice
        
rotten-tomatoes-enrich-microservice:
        solrReadUrl: http://solr-slave-microservice/solr/select
        solrWriteUrl: http://solr-master-microservice/solr/update?commit=true
        databaseServiceName: http://database-microservice
        searchQueryUrlTemplate: http://api.rottentomatoes.com/api/public/v1.0/movies.json?apikey={apiKey}&q={searchTerm}&page_limit=1
        applicationKey: nwwhgh8hhtfvu77u85s25nc8
        solrSchemaChangeUrl: http://localhost:8983/solr/schema/fields
        quickPlaySourceUrl: http://54.191.76.80:8700/catalog-api/titles?type=movie&pageSize={pageSize}&pageNumber={pageNumber}
        
rotten-tomatoes-microservice:
        applicationName: LibertasQP
        applicationKey: nwwhgh8hhtfvu77u85s25nc8
        databaseServiceName: http://database-microservice
        solrReadUrl: http://solr-slave-microservice/solr/select
        searchQueryUrlTemplate: http://api.rottentomatoes.com/api/public/v1.0/movies.json?apikey={apiKey}&q={searchTerm}&page_limit=5
        similarQueryUrlTemplate: http://api.rottentomatoes.com/api/public/v1.0/movies/{rottenTomatoesProductId}/similar.json?apikey={apiKey}
        rottenTomatoesIdField: rottenTomatoesId
        manualRecommendationFallbackEnabled: false
        
tenant-microservice:
         databaseServiceName: http://database-microservice
         createCustomerUrlTemplate: http://customer-microservice/v1/customer
         createTenantTopic: createTenantTopic
         updateTenantTopic: updateTenantTopic
         addAdministratorTopic: addAdministratorTopic
         removeAdministratorTopic: removeAdministratorTopic
         deleteTenantTopic: deleteTenantTopic
    
watchhistory-microservice:
         databaseServiceName: http://database-microservice
         
         
workflow-microservice:
         databaseServiceName: http://database-microservice
zuul:
    proxy:
        route:
            customer-microservice: /customer
            tenant-microservice: /tenant
            device-microservice: /device
            recommendation-microservice: /v1/recommendation
            rotten-tomatoes-microservice: /v1/rt-recommendation
            hls-microservice: /v1/hls
   
endpoints:
  autoconfig:
    id: autoconfig
    sensitive: false
    enabled: true
  beans:
    id: beans
    sensitive: false
    enabled: true
  env:
    id: env
    sensitive: false
    enabled: true
  metrics:
    id: metrics
    sensitive: false
    enabled: true
  extendedmetrics:
    id: extendedmetrics
    sensitive: false
    enabled: true
  trace:
    id: trace
    sensitive: false
    enabled: true
  dump:
    id: dump
    sensitive: false
    enabled: true
  configprops:
    id: configprops
    sensitive: false
    enabled: true
    keys-to-sanitize: password,secret
  health:
    id: health
    sensitive: false
    enabled: true
  info:
    id: info
    sensitive: false
    enabled: true
  jolokia:
    sensitive: false
    enabled: true
  error:
    path: /error
  refresh:
    id: refresh
    sensitive: false
    enabled: true  
  
